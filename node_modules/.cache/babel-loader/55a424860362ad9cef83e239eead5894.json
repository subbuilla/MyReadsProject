{"ast":null,"code":"import _classCallCheck from \"/Users/subbuilla/Desktop/React_Udacity/MyReads/reactnd-project-myreads-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/subbuilla/Desktop/React_Udacity/MyReads/reactnd-project-myreads-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/subbuilla/Desktop/React_Udacity/MyReads/reactnd-project-myreads-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/subbuilla/Desktop/React_Udacity/MyReads/reactnd-project-myreads-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/subbuilla/Desktop/React_Udacity/MyReads/reactnd-project-myreads-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/subbuilla/Desktop/React_Udacity/MyReads/reactnd-project-myreads-starter/src/Search.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport * as BooksAPI from './BooksAPI';\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Search)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      query: \"\",\n      searchResults: []\n    };\n\n    _this.queryUpdate = function (query) {\n      if (query !== \"\") {\n        _this.setState(function () {\n          return {\n            query: query\n          };\n        });\n\n        _this.booksUpdate(query);\n      } else {\n        _this.setState(function () {\n          return {\n            searchResults: []\n          };\n        });\n      }\n    };\n\n    _this.booksUpdate = function (query) {\n      BooksAPI.search(query).then(function (searchResults) {\n        _this.setState(function () {\n          return {\n            searchResults: searchResults\n          };\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          books = _this$props.books,\n          update = _this$props.update;\n      return React.createElement(\"div\", {\n        className: \"search-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-books-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"close-search\",\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Close\"), React.createElement(\"div\", {\n        className: \"search-books-input-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this2.queryUpdate(e.target.value);\n        },\n        placeholder: \"Search by title or author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"search-books-results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"books-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.state.searchResults.length > 0 && this.state.searchResults.map(function (book) {\n        var found = books.find(function (b) {\n          return b.id === book.id;\n        });\n        return React.createElement(\"li\", {\n          key: book.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"book\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"book-top\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"book-cover\",\n          style: {\n            width: 128,\n            height: 192,\n            backgroundImage: \"url(\".concat(book.imageLinks.thumbnail, \")\")\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"book-shelf-changer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(\"select\", {\n          onChange: function onChange(e) {},\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"move\",\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \"Move to...\"), React.createElement(\"option\", {\n          value: \"currentlyReading\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"Currently Reading\"), React.createElement(\"option\", {\n          value: \"wantToRead\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"Want to Read\"), React.createElement(\"option\", {\n          value: \"read\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \"Read\"), React.createElement(\"option\", {\n          value: \"none\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, \"None\")))), React.createElement(\"div\", {\n          className: \"book-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, book.title), React.createElement(\"div\", {\n          className: \"book-authors\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, book.authors)));\n      }))));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nexport default Search;","map":{"version":3,"sources":["/Users/subbuilla/Desktop/React_Udacity/MyReads/reactnd-project-myreads-starter/src/Search.js"],"names":["React","Component","PropTypes","Link","BooksAPI","Search","state","query","searchResults","queryUpdate","setState","booksUpdate","search","then","props","books","update","e","target","value","length","map","book","found","find","b","id","width","height","backgroundImage","imageLinks","thumbnail","title","authors"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom'\nimport * as BooksAPI from './BooksAPI'\n\n\nclass Search extends Component{\n    \n    state = {\n        query:\"\",\n        searchResults:[]\n    }\n    \n    queryUpdate = (query)=>{\n        if(query!==\"\"){\n            this.setState(()=>(\n                {\n                    query:query\n                }))\n            this.booksUpdate(query)\n        }\n        else{\n            this.setState(()=>({\n                searchResults:[]\n            }))\n        }\n        \n    }\n    booksUpdate = (query)=>{\n        BooksAPI.search(query).then((searchResults)=>{\n            this.setState(()=>({\n                searchResults:searchResults\n            }))\n        })\n\n       \n        \n    }\n    render(){\n        const {books,update} = this.props \n        return (\n            <div className=\"search-books\">\n            <div className=\"search-books-bar\">\n              <Link className=\"close-search\" to=\"/\">Close</Link>\n              <div className=\"search-books-input-wrapper\">\n                {/*\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                  You can find these search terms here:\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                  you don't find a specific author or title. Every search is limited by search terms.\n                */}\n                <input type=\"text\" onChange={(e)=>{this.queryUpdate(e.target.value)}} placeholder=\"Search by title or author\"/>\n\n              </div>\n              \n            </div>\n            <div className=\"search-books-results\">\n              <ol className=\"books-grid\">\n                  {this.state.searchResults.length>0 && (this.state.searchResults.map((book)=>{\n                      \n                    const found = books.find((b)=>(b.id===book.id)) \n                    \n                    return(\n                    <li key={book.id}>\n                  <div className=\"book\">\n                    <div className=\"book-top\">\n                      <div className=\"book-cover\" style={{ width: 128, height: 192, backgroundImage: `url(${book.imageLinks.thumbnail})`}}></div>\n                      <div className=\"book-shelf-changer\">\n                        <select onChange={(e)=>{}}>\n                          <option value=\"move\" disabled>Move to...</option>\n                          <option value=\"currentlyReading\">Currently Reading</option>\n                          <option value=\"wantToRead\">Want to Read</option>\n                          <option value=\"read\">Read</option>\n                          <option value=\"none\">None</option>\n                        </select>\n                      </div>\n                    </div>\n                    <div className=\"book-title\">{book.title}</div>\n                    <div className=\"book-authors\">{book.authors}</div>\n                  </div>\n                </li>\n                )}))}\n              \n              </ol>\n            </div>\n          </div>        \n          )\n    }\n}\n\nexport default Search"]},"metadata":{},"sourceType":"module"}